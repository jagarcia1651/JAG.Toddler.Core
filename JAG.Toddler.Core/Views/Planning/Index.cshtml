@model JAG.Toddler.Core.ViewModels.PlanningViewModel

@{
    ViewData["Title"] = "Planning Screen";
}
<h1>Planning</h1>

<table>
    <tr>
        <th>Month</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            @for (int i = 12; i > 0; i--)
            {
                DateTime MonthHeader = Model.SelectedPlanDate;
                <td>
                    @MonthHeader.AddMonths(-i).ToString("MMM")
                </td>
            }
        }
    </tr>
    <tr>
        <th>Sales 2 Prior</th>
        @foreach (var entry in Model.PlanningModel.TwoPriorYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Sales)
            </td>
        }
    </tr>
    <tr>
        <th>Sales Prior</th>
        @foreach (var entry in Model.PlanningModel.PriorYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Sales)
            </td>
        }
    </tr>
    <tr>
        <th>Sales Current</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Sales)
            </td>
        }
    </tr>
    <tr>
        <th>LM Sales Plan</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.SalesPlan)
            </td>
        }
    </tr>
    <tr>
        <th>Percent Change</th>
        @for (int i = 0; i < Model.PlanningModel.CurrentYear.Count(); i++)
        {
            float? change = (((Model.PlanningModel.CurrentYear.ElementAt(i).Sales - Model.PlanningModel.PriorYear.ElementAt(i).Sales) * 100) / (float)Model.PlanningModel.PriorYear.ElementAt(i).Sales);
            <td>
                @change.ToString()%
            </td>
        }
    </tr>
    <tr>
        <th>Sales Plan</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            <td>
                @Html.DisplayFor(e => entry.SalesPlan)
            </td>
        }
    </tr>
    <tr>
        <th>Stock Prior Year</th>
        @foreach (var entry in Model.PlanningModel.PriorYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Stocks)
            </td>
        }
    </tr>
    <tr>
        <th>Stock Current Year</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Stocks)
            </td>
        }
    </tr>
    <tr>
        <th>Stock Current Ratio</th>
        @for (int i = 0; i < Model.PlanningModel.CurrentYear.Count(); i++)
        {
            float? ratio = Model.PlanningModel.CurrentYear.ElementAt(i).Stocks / (float)Model.PlanningModel.CurrentYear.ElementAt(i).Sales;
            <td>
                @ratio.ToString()
            </td>
        }
    </tr>
    <tr>
        <th>On Hand</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            <td>
                @Model.PlanningModel.NextYear.First().Stocks
            </td>
            @for (int i = 11; i > 0; i--)
            {
                DateTime MonthHeader = Model.SelectedPlanDate;
                <td>
                    @MonthHeader.AddMonths(-i).ToString("MMM")
                </td>
            }
        }
    </tr>
    <tr>
        <th>Stock Plan</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            <td>
                @Model.PlanningModel.NextYear.First().StockPlan.ToString()
            </td>
            @for (int i = 1; i < Model.PlanningModel.NextYear.Count(); i++)
            {
                int? stockPlan = (int)(Model.PlanningModel.NextYear.ElementAt(i).StockPlanRatio * Model.PlanningModel.NextYear.ElementAt(i).SalesPlan);
                <td>
                    @stockPlan.ToString()
                </td>
            }
        }
    </tr>
    <tr>
        <th>Stock Plan Ratio</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            <td>
                @Html.DisplayFor(e => entry.StockPlanRatio)
            </td>
        }
    </tr>
    <tr>
        <th>Markdowns Prior Year</th>
        @foreach (var entry in Model.PlanningModel.PriorYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Markdowns)
            </td>
        }
    </tr>
    <tr>
        <th>Percent Sales Prior</th>
        @foreach (var entry in Model.PlanningModel.PriorYear)
        {
            float? ratio = (entry.Markdowns / (float)entry.Sales) * 100;
            <td>@ratio.ToString()%</td>
        }
    </tr>
    <tr>
        <th>Markdowns Current Year</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.Markdowns)
            </td>
        }
    </tr>
    <tr>
        <th>Percent Sales</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            float? ratio = (entry.Markdowns / (float)entry.Sales) * 100;
            <td>@ratio.ToString()%</td>
        }
    </tr>
    <tr>
        <th>LM Markdown Plan</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            int? markdownPlan = (int)(entry.MarkdownsPlanRatio * entry.SalesPlan);
            <td>
                @markdownPlan
            </td>
        }
    </tr>
    <tr>
        <th>Markdowns Plan</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            int? markdownPlan = (int)(entry.MarkdownsPlanRatio * entry.SalesPlan);
            <td>
                @markdownPlan
            </td>
        }
    </tr>
    <tr>
        <th>Markdowns Plan Ratio</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            <td>
                @Html.DisplayFor(e => entry.MarkdownsPlanRatio)
            </td>
        }
    </tr>
    <tr>
        <th>Month</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            @for (int i = 12; i > 0; i--)
            {
                DateTime MonthHeader = Model.SelectedPlanDate;
                <td>
                    @MonthHeader.AddMonths(-i).ToString("MMM")
                </td>
            }
        }
    </tr>
    <tr>
        <th>Rec/Retail Month</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.ReceivedAtRetail)
            </td>
        }
    </tr>
    <tr>
        <th>Rec/Retail Plan</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            <td>
                @Html.DisplayFor(e => entry.RecAtRetailPlan)
            </td>
        }
    </tr>
    <tr>
        <th>Rec/Cost Month</th>
        @foreach (var entry in Model.PlanningModel.CurrentYear)
        {
            <td>
                @Html.DisplayFor(e => entry.ReceivedAtCost)
            </td>
        }
    </tr>
    <tr>
        <th>Rec/Cost Plan</th>
        @foreach (var entry in Model.PlanningModel.NextYear)
        {
            <td>
                TODO
            </td>
        }
    </tr>
    <tr>
        <th>On Order Retail</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            @for (int i = 0; i < 12; i++)
            {
                <td>
                    TODO
                </td>
            }
        }
    </tr>
    <tr>
        <th>On Order Cost</th>
        @if (Model.PlanningModel.CurrentYear.Any())
        {
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac1o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac2o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac3o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac4o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac5o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac6o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac7o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac8o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac9o.ToString()
            </td>
            <td>
                @Model.PlanningModel.CurrentYear.Last().Ufac10o.ToString()
            </td>
        }
    </tr>
    <tr>
        <th>OTB at Retail</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            @for (int i = 0; i < 12; i++)
            {
                <td>
                    TODO
                </td>
            }
        }
    </tr>
    <tr>
        <th>OTB at Cost</th>
        @if (Model.PlanningModel.NextYear.Any())
        {
            @for (int i = 0; i < 12; i++)
            {
                <td>
                    TODO
                </td>
            }
        }
    </tr>
</table>

<button type="button" id="exitButton">Exit</button>
@using (Html.BeginForm("Populate", "Planning", FormMethod.Get))
{
    @Html.TextBoxFor(m => Model.SelectedPlanDate, "{0:MM/dd/yyyy}", new { id = "dateSelect" })
    @Html.DropDownListFor(m => Model.SelectedStoreId, Model.StoreSelect, new { id = "storeSelect" })
    @Html.DropDownListFor(m => Model.SelectedClassId, Model.ClassSelect, new { id = "classSelect" })

    <button type="submit" id="populate">Populate</button>
}


<script type="text/javascript">
    $(document).ready(function () {

        //Used to populate class list upon selecting a store
        $("#storeSelect").change(function () {

            var selectedStoreId = $("#storeSelect").val().toString();

            $.getJSON("/Planning/GETClassList",
                {
                    storeId: selectedStoreId
                },
                function (data) {
                    var classSelect = $("#classSelect");
                    classSelect.empty();

                    $.each(data, function (index, value) {
                        classSelect.append(
                            $('<option></option>').val(value.classId).html(value.classes)
                        );
                    });

                });

        });

        //#TODO
        //Create savecheck and add to buttons

        //Redirects user to homepage/switchboard.
        $("#exitButton").click(function () {
            location.href = "/"
        });

        //Adds jqueryUI calendar popup to dateSelect
        $("#dateSelect").datepicker();
    });
</script>